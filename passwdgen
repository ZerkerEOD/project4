#!/bin/bash

#FUNCTIONS
##Random word grabber
passwdget () {
wget -qO- http://creativitygames.net/random-word-generator/randomwords/$wordamount | grep -o 'randomword_[1-9]\">[a-z]*' | awk -F ">" '{print $2}' > test.txt
}

#parses the words from one file
oneline () {
paste -s test.txt | sed 's/[[:blank:]]//g' > testnospace.txt
rm test.txt
mv testnospace.txt test.txt
}

passwdrnd () {
# Declare string passwdstr
passwdstr=$(cat test.txt)
# If true uses a special character
# If false uses capitalization
altnerate="true"

#Start of the alterations
for (( i=0; i < ${#passwdstr}; i++ )); do
   char=${passwdstr:$i:1}
	 randomnum=$(awk -v seed=$RANDOM 'BEGIN{srand(seed); print rand()}')
	 if (("$complexity" -le "$randomnum")); then
		 ## Altering a to either A or @
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}@"
			 altnerate="false"
		 else
			 newpass="${newpass}A"
			 alternate="true"
		 fi

		 ## Altering b to either B or 8
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}8"
			 altnerate="false"
		 else
			 newpass="${newpass}B"
			 alternate="true"
		 fi

		 ## Altering c to either C or (
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}("
			 altnerate="false"
		 else
			 newpass="${newpass}C"
			 alternate="true"
		 fi

		 ## Altering d to either D or 6
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}6"
			 altnerate="false"
		 else
			 newpass="${newpass}D"
			 alternate="true"
		 fi

		 ## Altering e to either E or 3
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}3"
			 altnerate="false"
		 else
			 newpass="${newpass}E"
			 alternate="true"
		 fi

		 ## Altering f to either F or #
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}#"
			 altnerate="false"
		 else
			 newpass="${newpass}F"
			 alternate="true"
		 fi

		 ## Altering g to either G or 9
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}9"
			 altnerate="false"
		 else
			 newpass="${newpass}G"
			 alternate="true"
		 fi

		 ## Altering h to either H or #
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}#"
			 altnerate="false"
		 else
			 newpass="${newpass}H"
			 alternate="true"
		 fi

		 ## Altering i to either I or !
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}!"
			 altnerate="false"
		 else
			 newpass="${newpass}I"
			 alternate="true"
		 fi

		 ## Altering j to either J or )
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass})"
			 altnerate="false"
		 else
			 newpass="${newpass}J"
			 alternate="true"
		 fi

		 ## Altering k to either K or <
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}<"
			 altnerate="false"
		 else
			 newpass="${newpass}K"
			 alternate="true"
		 fi

		 ## Altering l to either L or 1
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}1"
			 altnerate="false"
		 else
			 newpass="${newpass}L"
			 alternate="true"
		 fi

		 ## Altering m to either M or *
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}*"
			 altnerate="false"
		 else
			 newpass="${newpass}M"
			 alternate="true"
		 fi

		 ## Altering n to either N or ^
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}^"
			 altnerate="false"
		 else
			 newpass="${newpass}N"
			 alternate="true"
		 fi

		 ## Altering o to either O or 0
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}0"
			 altnerate="false"
		 else
			 newpass="${newpass}O"
			 alternate="true"
		 fi

		 ## Altering p to either P or 9
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}9"
			 altnerate="false"
		 else
			 newpass="${newpass}P"
			 alternate="true"
		 fi

		 ## Altering q to either Q or 9
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}9"
			 altnerate="false"
		 else
			 newpass="${newpass}Q"
			 alternate="true"
		 fi

		 ## Altering r to either R or %
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}%"
			 altnerate="false"
		 else
			 newpass="${newpass}R"
			 alternate="true"
		 fi

		 ## Altering s to either S or $
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}$"
			 altnerate="false"
		 else
			 newpass="${newpass}S"
			 alternate="true"
		 fi

		 ## Altering t to either T or +
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}+"
			 altnerate="false"
		 else
			 newpass="${newpass}T"
			 alternate="true"
		 fi

		 ## Altering u to either U or -
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}-"
			 altnerate="false"
		 else
			 newpass="${newpass}U"
			 alternate="true"
		 fi

		 ## Altering v to either V or ^
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}^"
			 altnerate="false"
		 else
			 newpass="${newpass}V"
			 alternate="true"
		 fi

		 ## Altering w to either W or u
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}u"
			 altnerate="false"
		 else
			 newpass="${newpass}W"
			 alternate="true"
		 fi

		 ## Altering x to either X or %
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}%"
			 altnerate="false"
		 else
			 newpass="${newpass}X"
			 alternate="true"
		 fi

		 ## Altering y to either Y or ?
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}?"
			 altnerate="false"
		 else
			 newpass="${newpass}Y"
			 alternate="true"
		 fi

		 ## Altering z to either Z or =
		 if [[ $char == "a" ]] && [[ $altnerate == "true" ]]; then
			 newpass="${newpass}="
			 altnerate="false"
		 else
			 newpass="${newpass}Z"
			 alternate="true"
		 fi
	 else
		newpass="${newpass}${char}"
	 fi

done

}

#VARIABLES
wordamount=4
complexity=0.0

#GET OPTIONS
while getopts ":n:t:" opt; do
	case ${opt} in
		n ) wordamount="$OPTARG";;
		t ) complexity="$OPTARG";;
		\?) ;;#invalad option
		: ) ;;#missing arguments for an option
	esac
done

#MAIN PROGRAM
passwdget
oneline
passwdrnd
echo $newpass
rm test.txt

exit 0

#Use next information for getting a random number between 0.0 - 1.0
#awk -v seed=$RANDOM 'BEGIN{srand(seed);print rand()}'


#Get position echo ${var:position:length}
